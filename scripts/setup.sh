#!/bin/bash

# Setup script generated by Claude Sonnet 4.5 (Preview) through GitHub Copilot

set -e  # Exit on error

echo "🔧 System Setup Script"
echo "This script will install the required tools for local development:"
echo "  - make"
echo "  - Docker"
echo "  - Python 3.13"
echo "  - Node.js 22"
echo ""

MISSING_TOOLS=()

# Check for make
echo "🔍 Checking for make..."
if ! command -v make &> /dev/null; then
    echo "❌ make not found"
    MISSING_TOOLS+=("make")
else
    echo "✅ make is already installed ($(make --version | head -n1))"
fi

# Check for Docker
echo "🔍 Checking for Docker..."
if ! command -v docker &> /dev/null; then
    echo "❌ Docker not found"
    MISSING_TOOLS+=("docker")
else
    echo "✅ Docker is already installed ($(docker --version))"
fi

# Check for Python 3.13
echo "🔍 Checking for Python 3.13..."
if ! command -v python3.13 &> /dev/null; then
    echo "❌ Python 3.13 not found"
    MISSING_TOOLS+=("python3.13")
else
    echo "✅ Python 3.13 is already installed ($(python3.13 --version))"
fi

# Check for Node.js 22
echo "🔍 Checking for Node.js 22..."
if ! command -v node &> /dev/null || ! node --version | grep -q "v22\."; then
    if command -v node &> /dev/null; then
        echo "❌ Node.js 22 not found (current version: $(node --version))"
    else
        echo "❌ Node.js not found"
    fi
    MISSING_TOOLS+=("node22")
else
    echo "✅ Node.js 22 is already installed ($(node --version))"
fi

echo ""

# If nothing is missing, exit
if [ ${#MISSING_TOOLS[@]} -eq 0 ]; then
    echo "🎉 All required tools are already installed!"
    exit 0
fi

# Ask user for confirmation
echo "⚠️  The following tools need to be installed:"
for tool in "${MISSING_TOOLS[@]}"; do
    echo "  - $tool"
done
echo ""
read -p "Do you want to proceed with installation? (y/N): " -n 1 -r
echo ""

if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "❌ Installation cancelled by user"
    exit 1
fi

echo ""
echo "🚀 Starting installation..."
echo ""

# Install make
if [[ " ${MISSING_TOOLS[@]} " =~ " make " ]]; then
    echo "📦 Installing make..."
    sudo apt-get update
    sudo apt-get install -y make
    echo "✅ make installed"
fi

# Install Docker
if [[ " ${MISSING_TOOLS[@]} " =~ " docker " ]]; then
    echo "📦 Installing Docker..."
    
    # Add Docker's official GPG key
    sudo apt-get update
    sudo apt-get install -y ca-certificates curl
    sudo install -m 0755 -d /etc/apt/keyrings
    sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
    sudo chmod a+r /etc/apt/keyrings/docker.asc
    
    # Add the repository to Apt sources
    echo \
      "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
      $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
      sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    
    sudo apt-get update
    sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
    
    # Add current user to docker group
    sudo usermod -aG docker $USER
    
    echo "✅ Docker installed"
    echo "⚠️  You may need to log out and log back in for Docker group membership to take effect"
fi

# Install Python 3.13
if [[ " ${MISSING_TOOLS[@]} " =~ " python3.13 " ]]; then
    echo "📦 Installing Python 3.13..."
    sudo apt-get update
    sudo apt-get install -y software-properties-common
    sudo add-apt-repository -y ppa:deadsnakes/ppa
    sudo apt-get update
    sudo apt-get install -y python3.13 python3.13-venv python3.13-dev
    echo "✅ Python 3.13 installed"
fi

# Install Node.js 22
if [[ " ${MISSING_TOOLS[@]} " =~ " node22 " ]]; then
    echo "📦 Installing Node.js 22..."
    
    # Install Node.js 22 using NodeSource
    curl -fsSL https://deb.nodesource.com/setup_22.x | sudo -E bash -
    sudo apt-get install -y nodejs
    
    echo "✅ Node.js 22 installed"
fi

echo ""
echo "🎉 All tools have been installed successfully!"
echo ""

# Run install.sh to set up project dependencies
echo "🚀 Setting up project dependencies..."
bash scripts/install.sh

echo ""
echo "📝 Next steps:"
echo "  1. If Docker was installed, log out and log back in (or run: newgrp docker)"
echo "  2. Run 'make dev' to start development"
